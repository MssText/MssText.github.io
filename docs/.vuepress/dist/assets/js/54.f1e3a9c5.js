(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{484:function(v,_,e){"use strict";e.r(_);var t=e(12),l=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h3",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),e("p",[v._v("这一章主要介绍了JavaScript的数据类型和流程控制语句。")]),v._v(" "),e("h3",{attrs:{id:"知识扫盲"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识扫盲"}},[v._v("#")]),v._v(" 知识扫盲")]),v._v(" "),e("p",[v._v("值得关注的点是：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("var")]),v._v(" 声明的变量只有函数作用域，没有局部作用域")]),v._v(" "),e("li",[e("code",[v._v("let")]),v._v(" 和 "),e("code",[v._v("const")]),v._v(" 都有局部作用域，优先使用"),e("code",[v._v("const")]),v._v("，保持变量的引用不会变，可维护性更好。")]),v._v(" "),e("li",[e("code",[v._v("const")]),v._v(" 声明变量时必须初始化变量。")]),v._v(" "),e("li",[e("code",[v._v("null")]),v._v(" 是用来表示一个空对象的引用，因此在进行类型判断时，注意 "),e("code",[v._v("null")]),v._v(" 会返回 "),e("code",[v._v("object")])]),v._v(" "),e("li",[e("code",[v._v("undefined")]),v._v(" 表示为定义的变量，注意和 "),e("code",[v._v("null")]),v._v(" 的区别。永远不要将 "),e("code",[v._v("undefined")]),v._v(" 赋值给一个变量，而是应该使用 "),e("code",[v._v("null")]),v._v("进行赋值。")]),v._v(" "),e("li",[e("code",[v._v("NaN")]),v._v(" 不等于包括 "),e("code",[v._v("NaN")]),v._v(" 在内的所有值。")]),v._v(" "),e("li",[v._v("内置符号(well-known symbol)，用于暴露语言内部行为，开发者 可以直接访问、重写或模拟这些行为。这些内置符号都以 Symbol 工厂函数字符串属性的形式存在")])])])}),[],!1,null,null,null);_.default=l.exports}}]);